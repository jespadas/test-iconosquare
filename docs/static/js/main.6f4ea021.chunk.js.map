{"version":3,"sources":["context/AppContext.js","components/posts/PostsList.js","components/users/UserList.js","icono-logo-white.svg","components/ui/AppHeader.js","components/CreateScreen.js","routers/AppRouter.js","App.js","index.js"],"names":["AppContext","createContext","PostsList","userIdPassed","localStorage","getItem","userNamePassed","useState","open","setOpen","loading","setLoading","posts","setPosts","newPost","setNewPost","values","setValues","useEffect","url","JSON","parse","axios","get","then","response","data","handleInputChange","target","name","value","postId","Math","floor","random","className","List","selection","verticalAlign","Grid","columns","divided","container","stackable","Segment","Dimmer","active","inverted","Loader","size","doubling","centered","Row","Column","Image","src","mobile","tablet","computer","Modal","onClose","onOpen","trigger","Button","Header","Content","Description","Form","Field","placeholder","autoComplete","onChange","e","autoFocus","Actions","color","onClick","console","log","type","map","postContent","postTitle","as","Item","postcontent","postsComments","undefined","Comment","Group","dividing","length","Avatar","commentAvatar","Author","commentAuthor","Metadata","commentDate","Text","commentContent","UserList","apiData","setApiData","Table","singleLine","HeaderCell","Body","Cell","userName","userAddress","userPhone","href","userWebsite","to","userId","userPosts","setItem","stringify","setData","AppHeader","image","logo","content","CreatePost","AppRouter","exact","path","component","App","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6f4ea021.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const AppContext = createContext();","import React, { useState, useEffect } from 'react';\r\n//import { useHistory } from 'react-router';\r\nimport { List, Modal, Comment, Grid, Button, Header, Form, Segment, Image, Dimmer, Loader } from 'semantic-ui-react';\r\nimport axios from 'axios';\r\n\r\nimport '../../styles.css';\r\n\r\nconst PostsList = () => {\r\n\r\n    const userIdPassed = localStorage.getItem('userId');\r\n    const userNamePassed = localStorage.getItem('userName');\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [loading, setLoading] = useState(true);\r\n    const [posts, setPosts] = useState([]);\r\n    const [newPost, setNewPost] = useState([]);\r\n    const [values, setValues] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const url = 'https://613885d5163b560017039f42.mockapi.io/api/v1/users/' + JSON.parse(userIdPassed) + '/posts';\r\n        axios.get(url)\r\n            .then(response => {\r\n                setPosts([...response.data]);\r\n                setLoading(!loading);\r\n            });\r\n\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    const createPost = () => {\r\n        setNewPost(newPost => [...newPost, values]);\r\n        setOpen(!open)\r\n        console.log(newPost, 'createpost');\r\n    }\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        const { name, value } = target;\r\n        const postId = Math.floor(Math.random() * 100);\r\n        setValues({ ...values, [name]: value, postId });\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <List selection verticalAlign='middle' >\r\n                <Grid columns={3} divided container stackable>\r\n                    <h1>Posts list for {userNamePassed}</h1>\r\n                    {\r\n                        loading\r\n                            ?\r\n                            <Segment>\r\n                                <Dimmer active inverted>\r\n                                    <Loader size='massive' active />\r\n                                </Dimmer>\r\n                                <Grid container verticalAlign='middle' doubling columns={3} centered>\r\n                                    <Grid.Row>\r\n                                        <Grid.Column>\r\n                                            <Image src='https://react.semantic-ui.com/images/wireframe/media-paragraph.png' />\r\n                                        </Grid.Column>\r\n                                        <Grid.Column>\r\n                                            <Image src='https://react.semantic-ui.com/images/wireframe/media-paragraph.png' />\r\n                                        </Grid.Column>\r\n                                        <Grid.Column>\r\n                                            <Image src='https://react.semantic-ui.com/images/wireframe/media-paragraph.png' />\r\n                                        </Grid.Column>\r\n                                    </Grid.Row>\r\n                                </Grid>\r\n                            </Segment>\r\n                            :\r\n                            <Grid.Row>\r\n                                <Grid.Column mobile={16} tablet={8} computer={4}>\r\n                                    <Modal\r\n                                        onClose={() => setOpen(false)}\r\n                                        onOpen={() => setOpen(true)}\r\n                                        open={open}\r\n                                        trigger={\r\n                                            <Button className=\"create-button\">\r\n                                                <span>+</span><br /><span>Create a new post</span>\r\n                                            </Button>\r\n                                        }\r\n                                    >\r\n                                        <Modal.Header>\r\n                                            <span>Create a new post: </span>\r\n                                        </Modal.Header>\r\n                                        <Modal.Content>\r\n                                            <Modal.Description>\r\n                                                <Form>\r\n                                                    <Form.Field>\r\n                                                        <label>Title</label>\r\n                                                        <input\r\n                                                            placeholder='Your comment title...'\r\n                                                            autoComplete='off'\r\n                                                            onChange={(e) => handleInputChange(e)}\r\n                                                            name='postTitle'\r\n                                                            autoFocus\r\n                                                        />\r\n                                                    </Form.Field>\r\n                                                    <Form.Field>\r\n                                                        <label>Post</label>\r\n                                                        <input\r\n                                                            placeholder='Your comment...'\r\n                                                            autoComplete='off'\r\n                                                            onChange={(e) => handleInputChange(e)}\r\n                                                            name='postContent'\r\n\r\n                                                        />\r\n                                                    </Form.Field>\r\n                                                    <Modal.Actions>\r\n                                                        <Button\r\n                                                            color=\"blue\"\r\n                                                            onClick={createPost}\r\n                                                            type='submit'\r\n                                                        >\r\n                                                            Create\r\n                                                        </Button>\r\n                                                    </Modal.Actions>\r\n                                                </Form>\r\n                                            </Modal.Description>\r\n                                        </Modal.Content>\r\n\r\n                                    </Modal>\r\n\r\n                                </Grid.Column>\r\n                                {/* NEW POST LIST */}\r\n                                {\r\n                                    newPost\r\n                                        ?\r\n                                        newPost.map(({ postId, postContent, postTitle }) => {\r\n                                            console.log(postId);\r\n                                            return (\r\n                                                <Grid.Column as=\"h2\" mobile={16} tablet={8} computer={4} key={postId}>\r\n                                                    <List selection verticalAlign='middle' className=\"list-item\">\r\n                                                        <Modal\r\n                                                            key={postId}\r\n                                                            onClose={() => setOpen(false)}\r\n                                                            onOpen={() => setOpen(true)}\r\n                                                            trigger={\r\n                                                                <List.Item key={postId}>\r\n                                                                    <List.Content >\r\n                                                                        <List.Header as=\"h2\">{postTitle}</List.Header>\r\n                                                                        <h3>{postContent}</h3>\r\n                                                                    </List.Content>\r\n                                                                </List.Item>}\r\n                                                            postcontent={postContent}\r\n                                                        >\r\n                                                            <Modal.Header>\r\n                                                                <span>{postTitle}</span>\r\n                                                            </Modal.Header>\r\n                                                            <Modal.Content>\r\n                                                                <Modal.Description>\r\n                                                                    <p>{postContent}</p>\r\n                                                                </Modal.Description>\r\n                                                            </Modal.Content>\r\n                                                        </Modal>\r\n                                                    </List>\r\n                                                </Grid.Column>\r\n                                            )\r\n                                        })\r\n                                        :\r\n                                        null\r\n                                }\r\n                                {/* API POSTS LIST */}\r\n                                {\r\n                                    posts.map(({ postTitle, postId, postContent, postsComments }) => {\r\n                                        return (\r\n                                            <Grid.Column as=\"h2\" key={postId} mobile={16} tablet={8} computer={4}>\r\n                                                <List selection verticalAlign='middle' className=\"list-item\">\r\n                                                    <Modal\r\n                                                        key={postId}\r\n                                                        onClose={() => setOpen(false)}\r\n                                                        onOpen={() => setOpen(true)}\r\n                                                        trigger={\r\n                                                            <List.Item key={postId} >\r\n                                                                <List.Content >\r\n                                                                    <List.Header as=\"h2\">{postTitle}</List.Header>\r\n                                                                    <h3>{postContent}</h3>\r\n                                                                </List.Content>\r\n                                                            </List.Item>}\r\n\r\n                                                    >\r\n                                                        <Modal.Header>\r\n                                                            <span>{postTitle}</span>\r\n                                                        </Modal.Header>\r\n                                                        <Modal.Content>\r\n                                                            <Modal.Description>\r\n                                                                <p>{postContent}</p>\r\n                                                                {postsComments !== undefined\r\n                                                                    ?\r\n                                                                    <Comment.Group>\r\n                                                                        <Header as='h3' dividing>\r\n                                                                            Comments ({postsComments.length})\r\n                                                                        </Header>\r\n\r\n                                                                        <Comment key={postId}>\r\n                                                                            <Comment.Avatar src={postsComments[0].commentAvatar} />\r\n                                                                            <Comment.Content>\r\n                                                                                <Comment.Author>{postsComments[0].commentAuthor}</Comment.Author>\r\n                                                                                <Comment.Metadata>\r\n                                                                                    <div>{\r\n                                                                                        postsComments[0].commentDate}</div>\r\n                                                                                </Comment.Metadata>\r\n                                                                                <Comment.Text>{postsComments[0].commentContent}</Comment.Text>\r\n\r\n                                                                                {/* TODO make post action for comments\r\n                                                                    <Comment.Actions>\r\n                                                                        <Comment.Action>Reply</Comment.Action>\r\n                                                                    </Comment.Actions> \r\n                                                                    */}\r\n                                                                            </Comment.Content>\r\n                                                                        </Comment>\r\n                                                                    </Comment.Group>\r\n                                                                    :\r\n                                                                    null\r\n                                                                }\r\n                                                            </Modal.Description>\r\n                                                        </Modal.Content>\r\n                                                    </Modal>\r\n                                                </List>\r\n                                            </Grid.Column>\r\n                                        )\r\n                                    })\r\n                                }\r\n\r\n\r\n\r\n                            </Grid.Row>\r\n                    }\r\n                </Grid>\r\n            </List>\r\n\r\n\r\n        </div >\r\n\r\n    )\r\n}\r\n\r\nexport default PostsList;\r\n","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Table, Button, Loader, Dimmer, Segment, Image } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport '../../styles.css';\r\n\r\nconst UserList = () => {\r\n\r\n    const [apiData, setApiData] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    const getUsers = () => {\r\n        const url = `https://613885d5163b560017039f42.mockapi.io/api/v1/users/`;\r\n        axios.get(url)\r\n            .then(response => {\r\n                setApiData(response.data);\r\n                setLoading(!loading);\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        getUsers();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n\r\n    const setData = (data) => {\r\n        let { userId, userName, userPosts } = data;\r\n        localStorage.setItem('userId', JSON.stringify(userId));\r\n        localStorage.setItem('userName', userName);\r\n        localStorage.setItem('userPosts', userPosts)\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n\r\n            {\r\n                loading\r\n                    ?\r\n                    <Segment>\r\n                        <Dimmer active inverted>\r\n                            <Loader size='large'>Loading</Loader>\r\n                        </Dimmer>\r\n                        <Image src='https://react.semantic-ui.com/images/wireframe/paragraph.png' />\r\n                    </Segment>\r\n                    :\r\n                    <Table singleLine>\r\n                        <Table.Header>\r\n                            <Table.Row>\r\n                                <Table.HeaderCell>NAME</Table.HeaderCell>\r\n                                <Table.HeaderCell>ADDRESS</Table.HeaderCell>\r\n                                <Table.HeaderCell>PHONE</Table.HeaderCell>\r\n                                <Table.HeaderCell>WEBSITE</Table.HeaderCell>\r\n                                <Table.HeaderCell>EDIT</Table.HeaderCell>\r\n                            </Table.Row>\r\n                        </Table.Header>\r\n\r\n                        <Table.Body>\r\n                            {apiData.map((data) => {\r\n                                return (\r\n                                    <Table.Row key={data.userId}>\r\n                                        <Table.Cell>{data.userName}</Table.Cell>\r\n                                        <Table.Cell>{data.userAddress}</Table.Cell>\r\n                                        <Table.Cell>{data.userPhone}</Table.Cell>\r\n                                        <Table.Cell><a href={data.userWebsite}>{data.userWebsite}</a></Table.Cell>\r\n                                        <Table.Cell>\r\n                                            <Link to={`/user/${ data.userId }/posts`}>\r\n                                                <Button color=\"blue\" onClick={() => setData(data)}>List Posts</Button>\r\n                                            </Link>\r\n                                        </Table.Cell>\r\n                                    </Table.Row>\r\n                                )\r\n                            })}\r\n                        </Table.Body>\r\n\r\n                    </Table>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserList;","export default __webpack_public_path__ + \"static/media/icono-logo-white.a32d864d.svg\";","import React from 'react'\r\nimport { Header } from 'semantic-ui-react';\r\nimport '../../styles.css';\r\nimport logo from '../../icono-logo-white.svg'\r\nconst AppHeader = () => (\r\n  <>\r\n    <Header as='h2' image={logo} content='iconosquare' />\r\n  </>\r\n)\r\n\r\nexport default AppHeader","/* import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { Form } from 'semantic-ui-react'\r\nimport axios from 'axios'; */\r\n\r\nexport const CreatePost = () => {\r\n\r\n    /*     const postData = () => {\r\n        const url = 'https://613885d5163b560017039f42.mockapi.io/api/v1/newPosts';\r\n        axios.post(url, {\r\n            values\r\n        }).then(\r\n            setOpen(!open),\r\n        )\r\n    }; */\r\n\r\n    /* let history = useHistory();\r\n\r\n    const [name, setName] = useState('');\r\n    const [address, setAddress] = useState('');\r\n    const [phone, setPhone] = useState('');\r\n    const [website, setWebsite] = useState('');\r\n\r\n    const [id, setID] = useState(null);\r\n\r\n    const [posts, setPosts] = useState([]);\r\n    const [newPost, setNewPost] = useState(userPostsPassed);\r\n\r\n    useEffect(() => {\r\n        /* setID(localStorage.getItem('ID'));\r\n        setName(localStorage.getItem('Name'));\r\n        setAddress(localStorage.getItem('Addres'));\r\n        setPhone(localStorage.getItem('Phone'));\r\n        setWebsite(localStorage.getItem('Website'));\r\n}, [])\r\n    \r\n\r\nconst updateApiData = () => {\r\n    axios.put(`https://613885d5163b560017039f42.mockapi.io/JSONPlaceholder/${ id }`, {\r\n        name,\r\n        address,\r\n        phone,\r\n        website\r\n    }).then(() => {\r\n        history.push('/read');\r\n    };\r\n}); */\r\n    /*\r\n        return (\r\n            <div>\r\n                <Form onSubmit={postData}>\r\n                    <Form.Field>\r\n                        <label>Title</label>\r\n                        <input\r\n                            placeholder='Your comment title...'\r\n                            autoComplete='off'\r\n                            onChange={(e) => setNewPost(e.target.value)}\r\n                            name='postTitle'\r\n                        />\r\n                    </Form.Field>\r\n    \r\n                    <Form.Field>\r\n                        <label>Post</label>\r\n                        <input\r\n                            placeholder='Your comment...'\r\n                            autoComplete='off'\r\n                            onChange={(e) => setPostContent(e.target.value)}\r\n                            name='postTitle'\r\n                        />\r\n                    </Form.Field>\r\n                </Form>\r\n            </div>\r\n        )\r\n    } */\r\n}","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route, Redirect, Link } from 'react-router-dom';\r\nimport PostsList from '../components/posts/PostsList';\r\nimport UserList from '../components/users/UserList';\r\nimport AppHeader from '../components/ui/AppHeader';\r\nimport { CreatePost } from '../components/CreateScreen'\r\nimport '../styles.css';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    return (\r\n        <Router>\r\n            <div className=\"main\">\r\n                <Link to=\"/\" >\r\n                    <AppHeader />\r\n                </Link>\r\n                <Switch>\r\n                    <Route exact path=\"/\" component={UserList} />\r\n                    <Route exact path=\"/user/:userId/posts\" component={PostsList} />\r\n                    <Route exact path=\"/user/:userId/create-post\" component={CreatePost} />\r\n                    <Redirect to='/' />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    );\r\n};","import { AppContext } from './context/AppContext';\nimport { AppRouter } from './routers/AppRouter';\nimport './styles.css';\n\nfunction App() {\n  return (\n    <AppContext.Provider value>\n      <AppRouter />\n    </AppContext.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root')\n);\n"],"sourceRoot":""}